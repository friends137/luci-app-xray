name: Build and Release

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

env:
  PACKAGE_NAME: luci-app-xray
  CACHE_DIR: ~/cache

jobs:
  release:
    name: Build for ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86_64
            sdk_url_path: https://downloads.openwrt.org/releases/23.05.5/targets/x86/64
            sdk_name: -sdk-23.05.5-x86-64_

    env:
      SDK_URL_PATH: ${{ matrix.sdk_url_path }}
      SDK_NAME: ${{ matrix.sdk_name }}
      CCACHE_DIR: ~/.ccache
      CONFIG_CCACHE: y

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare Cache Key
        id: cache_key
        run: echo "::set-output name=timestamp::$(date +'%s')"

      - name: Setup Cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.CACHE_DIR }}
            ${{ env.CCACHE_DIR }}
          key: openwrt-${{ matrix.arch }}-${{ env.PACKAGE_NAME }}-${{ steps.cache_key.outputs.timestamp }}
          restore-keys: |
            openwrt-${{ matrix.arch }}-${{ env.PACKAGE_NAME }}-

      - name: Install Dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y \
            ccache gettext libncurses5-dev xsltproc p7zip-full rsync

      - name: Create Directories
        run: |
          CACHE_DIR_SDK="$CACHE_DIR/sdk"
          CACHE_DIR_DL="$CACHE_DIR/dl"
          CACHE_DIR_FEEDS="$CACHE_DIR/feeds"
          mkdir -p "$CACHE_DIR_SDK" "$CACHE_DIR_DL" "$CACHE_DIR_FEEDS"
          echo "CACHE_DIR_SDK=$CACHE_DIR_SDK" >> $GITHUB_ENV
          echo "CACHE_DIR_DL=$CACHE_DIR_DL" >> $GITHUB_ENV
          echo "CACHE_DIR_FEEDS=$CACHE_DIR_FEEDS" >> $GITHUB_ENV
          echo "SDK_HOME=$(mktemp -d)" >> $GITHUB_ENV

      - name: Download and Unzip SDK
        run: |
          cd "$CACHE_DIR_SDK"
          wget -q -O sha256sums "$SDK_URL_PATH/sha256sums"
          grep -- "$SDK_NAME" sha256sums > sha256sums.small
          SDK_FILE="$(cut -d' ' -f2 sha256sums.small | sed 's/*//g')"
          if [ ! -f "$SDK_FILE" ]; then
            wget -q -O "$SDK_FILE" "$SDK_URL_PATH/$SDK_FILE"
          fi
          sha256sum -c sha256sums.small
          cd -
          7z x "$CACHE_DIR_SDK/$SDK_FILE" -so | tar -C "$SDK_HOME" -xvf - --strip-components=1

      - name: Prepare feeds and dl
        run: |
          cd "$SDK_HOME"
          mkdir -p dl feeds
          cp feeds.conf.default feeds.conf
          sed -i 's#git.openwrt.org/openwrt/openwrt#github.com/openwrt/openwrt#' feeds.conf
          sed -i 's#git.openwrt.org/feed/packages#github.com/openwrt/packages#' feeds.conf
          sed -i 's#git.openwrt.org/project/luci#github.com/openwrt/luci#' feeds.conf
          sed -i 's#git.openwrt.org/feed/telephony#github.com/openwrt/telephony#' feeds.conf

      - name: Prepare luci-app-xray package
        run: |
          cd "$SDK_HOME/package"
          mkdir -p $PACKAGE_NAME
          rsync -av --exclude 'openwrt-sdk' $GITHUB_WORKSPACE/ $PACKAGE_NAME/
          # 提升 luci/ 下的文件到 package 根目录
          cd $PACKAGE_NAME
          if [ -d luci ]; then
            rsync -av --remove-source-files luci/ .
            rm -rf luci
          fi
          cd -
          ls -R "$SDK_HOME/package/$PACKAGE_NAME"

      - name: Update and Install Feeds
        run: |
          cd "$SDK_HOME"
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Build Package
        run: |
          cd "$SDK_HOME"
          make defconfig
          make package/$PACKAGE_NAME/compile V=s -j$(nproc)
          find "$SDK_HOME/bin/" -type f -name "*.ipk" -exec ls -lh {} \;

      - name: Copy Bin Files
        run: |
          mkdir -p "${{ github.workspace }}/output"
          find "$SDK_HOME/bin/" -type f -name "${PACKAGE_NAME}*.ipk" -exec cp {} "${{ github.workspace }}/output/" \;
          ls -lh "${{ github.workspace }}/output"

      - name: Release and Upload Assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: output/*.ipk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifact
        if: startsWith(github.ref, 'refs/tags/') == false
        uses: actions/upload-artifact@v4
        with:
          name: luci-app-xray
          path: output/*.ipk

  notify:
    name: Notify Release Publish
    runs-on: ubuntu-latest
    env:
      TRIGGER_URL: ${{ secrets.TRIGGER_URL }}
      TRIGGER_TOKEN: ${{ secrets.TRIGGER_TOKEN }}
    needs: release
    steps:
      - name: Notify Jenkins
        run: |
          if [ -z "$TRIGGER_URL" ] ; then
            echo "::warning::No trigger url found, skip..."
            exit 0
          fi
          curl -X POST \
              -H "Content-Type: application/json; charset=utf-8" \
              -H "Authorization: Bearer $TRIGGER_TOKEN" \
              -d "{\"event\":\"release\",\"repository\":\"${{ github.repository }}\",\"ref\":\"${{ github.ref }}\"}" \
              "$TRIGGER_URL" || true
